/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.generico.panel;

import br.com.generico.dao.SessaoDao;
import br.com.generico.to.Pessoa;
import br.com.generico.to.Sessao;
import java.awt.Toolkit;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.awt.event.WindowEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.TableColumn;
import org.apache.log4j.Logger;

/**
 *
 * @author marcos.celio
 */
public class PesquisarSessaoPanel extends javax.swing.JPanel {

    private JFrame cadastroSessaoFrame;
    private CadastroSessaoPanel cadastroSessaoPanel;
    private DateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
    private static Logger logger = Logger.getLogger(PesquisarSessaoPanel.class.getName());

    /**
     * Creates new form PesquisarSessaoPanel
     */
    public PesquisarSessaoPanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cpf = new javax.swing.JTextField();
        cns = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        dataDe = new javax.swing.JTextField();
        dataAte = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaResultado = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        nome = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        jLabel1.setText("CNS:");

        jLabel2.setText("CPF:");

        jLabel3.setText("Data de ");

        jLabel4.setText("a");

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Selecionar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        tabelaResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tabelaResultado.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jScrollPane1.setViewportView(tabelaResultado);

        jLabel5.setText("Nome:");

        jLabel6.setText("(Formato DD/MM/YYYY)");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(dataDe, javax.swing.GroupLayout.DEFAULT_SIZE, 81, Short.MAX_VALUE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(dataAte, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGap(240, 240, 240))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jLabel1)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(cns, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton1)
                        .addGap(31, 31, 31)
                        .addComponent(jButton2)
                        .addGap(0, 470, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 661, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(dataDe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dataAte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(57, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    class PesquisaSessaoTableModel extends AbstractTableModel {
        //private Object[][] data = {};

        SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
        List<Sessao> data = new ArrayList<Sessao>();
        private String[] columns = {"Nome", "CPF", "CNS", "Diagn√≥stico", "Data"};

        public String getColumnName(int column) {
            return columns[column];
        }

        public int getRowCount() {
            return data.size();
        }

        public int getColumnCount() {
            return columns.length;
        }

        public Object getValueAt(int rowNum, int colNum) {
            Sessao sessao = data.get(rowNum);

            if (colNum == 0) {
                return sessao.getPessoa().getNome();
            } else if (colNum == 1) {
                return sessao.getPessoa().getCpf();
            } else if (colNum == 2) {
                return sessao.getPessoa().getCns();
            } else if (colNum == 3) {
                return sessao.getDiagnostico();
            } else if (colNum == 4) {
                return sessao.getData();
            }
            return null;
        }

        public boolean isCellEditable(int row, int column) {
            return false;
        }

        public Class getColumnClass(int column) {
            return String.class;
        }

        public void setRows(List<Sessao> data) {
            this.data = data;
        }

        public List<Sessao> getData() {
            return data;
        }

        public void setValueAt(Object o, int row, int column) {
            try {
                Sessao rowObj = data.get(row);
                if (column == 0) {
                    rowObj.getPessoa().setNome(o.toString());
                } else if (column == 1) {
                    rowObj.getPessoa().setCpf(o.toString());
                } else if (column == 2) {
                    rowObj.getPessoa().setCns(o.toString());
                } else if (column == 3) {
                    rowObj.setDiagnostico(o.toString());
                } else {
                    rowObj.setData(formataData.parse(o.toString()));
                }
            } catch (Exception e) {
                logger.error("Erro neste ponto:", e);
            }
        }
    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        pesquisarSessao(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    public void pesquisarSessao(boolean limit){
        try {
            Pessoa pessoa = null;
            if ((cns.getText() == null || cns.getText().trim().equals(""))
                    && (cpf.getText() == null || cpf.getText().trim().equals(""))
                    && ((dataDe.getText() == null || dataDe.getText().trim().equals(""))
                    || (dataAte.getText() == null || dataAte.getText().trim().equals("")))
                    && (nome.getText() == null || nome.getText().trim().equals(""))) {
                JOptionPane.showMessageDialog(null, "√â necess√°rio preencher pelo menos 1 filtro.");
                return;
            }

            if (cns.getText() != null && !cns.getText().trim().equals("")) {
                pessoa = new Pessoa();
                pessoa.setCns(cns.getText().trim());
            }

            if (cpf.getText() != null && !cpf.getText().trim().equals("")) {
                if (pessoa == null) {
                    pessoa = new Pessoa();
                }
                pessoa.setCpf(cpf.getText().trim());
            }

            if (nome.getText() != null && !nome.getText().trim().equals("")) {
                if (pessoa == null) {
                    pessoa = new Pessoa();
                }
                pessoa.setNome(nome.getText().trim());
            }
            Sessao sessao = new Sessao();
            sessao.setPessoa(pessoa);

            String dataDeStr = null;
            String dataAteStr = null;

            if (dataDe.getText() != null && !dataDe.getText().equals("")) {
                try {
                    formataData.parse(dataDe.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Formato de data inv√°lido.");
                    return;
                }
                dataDeStr = dataDe.getText();
            }

            if (dataAte.getText() != null && !dataAte.getText().equals("")) {
                try {
                    formataData.parse(dataAte.getText());
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Formato de data inv√°lido.");
                    return;
                }
                dataAteStr = dataAte.getText();
            }

            List<Sessao> resultado = new SessaoDao().pesquisa(sessao, dataDeStr, dataAteStr);

            if (resultado.isEmpty()) {
                JOptionPane.showMessageDialog(null, "A pesquisa n√£o retornou registros.");
                return;
            }
            
            //TODO EXECUTA PESQUISA
            PesquisaSessaoTableModel model = new PesquisaSessaoTableModel();
            model.setRows(resultado);

            tabelaResultado = new JTable(model);
            jScrollPane1.setViewportView(tabelaResultado);

            TableColumn hdr0 = tabelaResultado.getTableHeader().getColumnModel().getColumn(0);
            hdr0.setPreferredWidth(210);
            hdr0.setMaxWidth(210);
            hdr0.setMinWidth(210);
            hdr0.setWidth(210);

            TableColumn hdr1 = tabelaResultado.getTableHeader().getColumnModel().getColumn(1);
            hdr1.setPreferredWidth(150);
            hdr1.setMaxWidth(150);
            hdr1.setMinWidth(150);
            hdr1.setWidth(150);

            TableColumn hdr2 = tabelaResultado.getTableHeader().getColumnModel().getColumn(2);
            hdr2.setPreferredWidth(130);
            hdr2.setMaxWidth(130);
            hdr2.setMinWidth(130);
            hdr2.setWidth(130);

            TableColumn hdr3 = tabelaResultado.getTableHeader().getColumnModel().getColumn(3);
            hdr3.setPreferredWidth(110);
            hdr3.setMaxWidth(110);
            hdr3.setMinWidth(110);
            hdr3.setWidth(110);

            TableColumn hdr4 = tabelaResultado.getTableHeader().getColumnModel().getColumn(4);
            hdr4.setPreferredWidth(110);
            hdr4.setMaxWidth(110);
            hdr4.setMinWidth(110);
            hdr4.setWidth(110);

            ListSelectionModel cellSelectionModel = tabelaResultado.getSelectionModel();
            cellSelectionModel.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
            tabelaResultado.setRowHeight(25);
            model.fireTableDataChanged();

            tabelaResultado.addMouseListener(new MouseListener() {

                @Override
                public void mouseClicked(MouseEvent me) {
                }

                @Override
                public void mousePressed(MouseEvent me) {
                }

                @Override
                public void mouseReleased(MouseEvent me) {
                }

                @Override
                public void mouseEntered(MouseEvent me) {
                }

                @Override
                public void mouseExited(MouseEvent me) {
                }
            });

        } catch (Exception e) {
            logger.error("Erro neste ponto:", e);
            JOptionPane.showMessageDialog(null, "Ocorreu um erro, por favor contate o desenvolvedor (Tel: 19-9354-5207).");
        }
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        int selecionado = tabelaResultado.getSelectedRow();
        if (selecionado > -1) {
            PesquisaSessaoTableModel model = (PesquisaSessaoTableModel) tabelaResultado.getModel();
            Sessao sessao = model.getData().get(selecionado);
            CadastroSessaoPanel.atualizaSessao = true;
            CadastroSessaoPanel.idAtualizaSessao = sessao.getId();
            cadastroSessaoPanel.preencheFormulario(sessao);
            WindowEvent wev = new WindowEvent(cadastroSessaoFrame, WindowEvent.WINDOW_CLOSING);
            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wev);         
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public CadastroSessaoPanel getCadastroSessaoPanel() {
        return cadastroSessaoPanel;
    }

    public void setCadastroSessaoPanel(CadastroSessaoPanel cadastroSessaoPanel) {
        this.cadastroSessaoPanel = cadastroSessaoPanel;
    }

    public JFrame getCadastroSessaoFrame() {
        return cadastroSessaoFrame;
    }

    public void setCadastroSessaoFrame(JFrame cadastroSessaoFrame) {
        this.cadastroSessaoFrame = cadastroSessaoFrame;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField cns;
    private javax.swing.JTextField cpf;
    private javax.swing.JTextField dataAte;
    private javax.swing.JTextField dataDe;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nome;
    private javax.swing.JTable tabelaResultado;
    // End of variables declaration//GEN-END:variables
}
