/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.generico.panel;

import br.com.generico.Main;
import br.com.generico.dao.AgendaDao;
import br.com.generico.to.Agenda;
import br.com.generico.to.Guia;
import br.com.generico.utils.DatePicker;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import java.text.SimpleDateFormat;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import org.apache.log4j.Logger;

/**
 *
 * @author Marcos
 */
public class AtualizaGuiaPanel extends javax.swing.JPanel {

    private SimpleDateFormat formataDataHora = new SimpleDateFormat("dd/MM/yyyy HH:mm");
    private SimpleDateFormat formataData = new SimpleDateFormat("dd/MM/yyyy");
    private SimpleDateFormat formataHora = new SimpleDateFormat("HH:mm");
    private static Logger logger = Logger.getLogger(AtualizaGuiaPanel.class.getName());
    private JFrame atualizaGuiaFrame;
    
    private Agenda agenda;

    /**
     * Creates new form AtualizaGuiaPanel
     */
    public AtualizaGuiaPanel(Agenda agenda) {
        this.agenda = agenda;
        initComponents();
        Icon icone = new ImageIcon(getClass().getResource("/br/com/generico/utils/icon_calendar.png"));
        dataBtn.setIcon(icone);
        horaSpinner.setEditor(new JSpinner.DateEditor(horaSpinner, "HH:mm"));
        data.setText(formataData.format(agenda.getData()));
        try {
            horaSpinner.getModel().setValue(agenda.getData());
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
        }

        if (agenda.getGuia().getDescricao() != null) {
            descricao.setText(agenda.getGuia().getDescricao().trim());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        horaSpinner = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        descricao = new javax.swing.JTextField();
        data = new javax.swing.JTextField();
        dataBtn = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("Horário:");

        horaSpinner.setModel(new javax.swing.SpinnerDateModel(new java.util.Date(), null, null, java.util.Calendar.HOUR_OF_DAY));

        jLabel2.setText("Descrição:");

        data.setEditable(false);

        dataBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dataBtnActionPerformed(evt);
            }
        });

        jLabel3.setText("Data:");

        jButton1.setText("Gravar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(dataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horaSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(76, 76, 76))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(dataBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(horaSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void dataBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dataBtnActionPerformed
        final JFrame f = new JFrame();
        JPanel p = new JPanel();
        Main.frame.getContentPane().add(p);
        Main.frame.pack();
        Main.frame.setVisible(true);
        data.setText(new DatePicker(Main.frame).setPickedDate());
    }//GEN-LAST:event_dataBtnActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Guia guia = new Guia();    
            guia.setId(agenda.getGuia().getId());
            guia.setIndice(agenda.getGuia().getIndice());            
            String dataStr = data.getText().trim();
            String horaStr = formataHora.format(horaSpinner.getValue());

            if (dataStr != null && !dataStr.trim().equals("")) {
                guia.setData(dataStr);
            } else {
                JOptionPane.showMessageDialog(this, "Por favor preencha o campo 'Data'.");
                return;
            }
            if (horaStr != null && !horaStr.trim().equals("")) {
                guia.setHora(horaStr);
            } else {
                JOptionPane.showMessageDialog(this, "Por favor preencha o campo 'Hora'.");
                return;
            }            
            if (descricao.getText() != null && !descricao.getText().trim().equals("")) {
                guia.setDescricao(descricao.getText().trim());
            } else {
                JOptionPane.showMessageDialog(this, "Por favor preencha o campo 'Descrição'.");
                return;
            }               
            AgendaDao agendaDao = new AgendaDao();
            agendaDao.atualiza(guia);
            AgendaPanel.preencheAgenda(AgendaPanel.data.getText(),true);            
            JOptionPane.showMessageDialog(this, "Registro gravado com sucesso.");
            WindowEvent wev = new WindowEvent(atualizaGuiaFrame, WindowEvent.WINDOW_CLOSING);
            Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wev);
        } catch (Exception e) {
            logger.error("Erro neste ponto:", e);
            JOptionPane.showMessageDialog(this, "Erro inesperado.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        limparFormulario();
        WindowEvent wev = new WindowEvent(atualizaGuiaFrame, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(wev);
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public javax.swing.JTextField data;
    private javax.swing.JButton dataBtn;
    private javax.swing.JTextField descricao;
    private javax.swing.JSpinner horaSpinner;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

    public JFrame getAtualizaGuiaFrame() {
        return atualizaGuiaFrame;
    }

    public void setAtualizaGuiaFrame(JFrame atualizaGuiaFrame) {
        this.atualizaGuiaFrame = atualizaGuiaFrame;
    }

    private void limparFormulario() {
        data.setText("");
        try {
            horaSpinner.getModel().setValue(formataDataHora.parse("10/10/2010 00:00"));
        } catch (Exception e) {
            logger.error(e.getMessage(), e);
        }
        descricao.setText("");
    }
}
